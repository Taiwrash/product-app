[{"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\Login.js":"1","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\SignUp.js":"2","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\ProductUpload.js":"3","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\pages\\Button.js":"4","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\App.js":"5","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\pages\\NavBar.js":"6","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\ProductDetails.js":"7","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\SingleProduct.js":"8","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\GeneralProducts.js":"9"},{"size":1733,"mtime":1606782197616,"results":"10","hashOfConfig":"11"},{"size":2155,"mtime":1606755010804,"results":"12","hashOfConfig":"11"},{"size":2084,"mtime":1606757409970,"results":"13","hashOfConfig":"11"},{"size":1012,"mtime":1606766551793,"results":"14","hashOfConfig":"11"},{"size":1302,"mtime":1606762443270,"results":"15","hashOfConfig":"11"},{"size":469,"mtime":1606763414417,"results":"16","hashOfConfig":"11"},{"size":1494,"mtime":1606782163995,"results":"17","hashOfConfig":"11"},{"size":996,"mtime":1606780687743,"results":"18","hashOfConfig":"11"},{"size":858,"mtime":1606784266223,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s7l55c",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\Login.js",["40"],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\SignUp.js",["41","42"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const [singleInfo, setSingleInfo] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [info, setInfo] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSingleInfo({ ...singleInfo, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(singleInfo);\r\n\r\n    if (\r\n      singleInfo.firstname &&\r\n      singleInfo.lastname &&\r\n      singleInfo.password &&\r\n      singleInfo.email\r\n    ) {\r\n      Axios.post(\"http://localhost:3200/user/signup\", singleInfo)\r\n        .then((res) => setSingleInfo(res.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {singleInfo.success === true ? <Redirect to=\"/login\" /> : null}\r\n      <section className=\"form-section\">\r\n        <div className=\"form-container\">\r\n          <h2>Sign Up Page</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              name=\"firstname\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              name=\"lastname\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Your Email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Your Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Your Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n            />\r\n            <button className=\"btn-primary\">Create an Account</button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\users\\ProductUpload.js",[],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\pages\\Button.js",["43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Button = () => {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [data, setData] = useState(\"\");\r\n  const { role } = useParams();\r\n  console.log(role);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3200/users`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result);\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(`http://localhost:3200/users/${data}`)\r\n  //     .then((res) => res.json())\r\n  //     .then((resp) => console.log(resp));\r\n  // });\r\n  return (\r\n    <>\r\n      {data.totalUsers.map((item) =>\r\n        item.role === \"admin\" ? (\r\n          <div className=\"btn-secondary btn-parent\">\r\n            <button>Edit</button>\r\n            <button>Delete</button>\r\n          </div>\r\n        ) : (\r\n          <NavBar />\r\n        )\r\n      )}\r\n      <h2>Hello</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\App.js",[],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\pages\\NavBar.js",[],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\ProductDetails.js",[],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\SingleProduct.js",["45"],"C:\\Users\\LENOVO\\Documents\\internships\\product-app\\src\\products\\GeneralProducts.js",[],{"ruleId":"46","severity":1,"message":"47","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"50","line":12,"column":10,"nodeType":"48","messageId":"49","endLine":12,"endColumn":14},{"ruleId":"46","severity":1,"message":"51","line":12,"column":16,"nodeType":"48","messageId":"49","endLine":12,"endColumn":23},{"ruleId":"46","severity":1,"message":"52","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":17},{"ruleId":"46","severity":1,"message":"53","line":6,"column":19,"nodeType":"48","messageId":"49","endLine":6,"endColumn":29},{"ruleId":"54","severity":1,"message":"55","line":11,"column":15,"nodeType":"56","endLine":11,"endColumn":59},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]